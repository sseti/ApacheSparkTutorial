scala> val intArray = Array(1,2,3,4,5,6,7,9,0)
intArray: Array[Int] = Array(1, 2, 3, 4, 5, 6, 7, 9, 0)

scala> val intRDD = sc.parallelize(intArray)
//RDD has been created
intRDD: org.apache.spark.rdd.RDD[Int] = ParallelCollectionRDD[2] at parallelize at <console>:26

scala> intRDD.first()
res2: Int = 1

scala> intRDD.take(3)
res3: Array[Int] = Array(1, 2, 3)

scala> intRDD.collect()
res4: Array[Int] = Array(1, 2, 3, 4, 5, 6, 7, 9, 0)

scala> intRDD.collect().foreach(println)
1
2
3
4
5
6
7
9
0

scala> intRDD.partitions.size
res6: Int = 4

scala> val intList = List(1,2,3,4,5,6,7,8,9,0)
intList: List[Int] = List(1, 2, 3, 4, 5, 6, 7, 8, 9, 0)

scala> val listRDD = sc.parallelize(intList)
listRDD: org.apache.spark.rdd.RDD[Int] = ParallelCollectionRDD[3] at parallelize at <console>:26
scala> val intListRDD = sc.parallelize(intList, 6)
intListRDD: org.apache.spark.rdd.RDD[Int] = ParallelCollectionRDD[4] at parallelize at <console>:26

scala> intListRDD.partitions.size
res7: Int = 6

scala> listRDD.partitions.size
res8: Int = 4

scala>

